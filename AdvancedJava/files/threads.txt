      int iterations = 3;
        main.java.Threads.MyThread myThread = new main.java.Threads.MyThread();
        myThread.start();
        main.java.Threads.MyRunnable myRunnable = new main.java.Threads.MyRunnable();
        //Anonym thread
        new Thread(myRunnable).start();

        try {
            for (int i = 0; i < iterations; i++){
                System.out.println("from main process");
                Thread.sleep(3000);
            }
        } catch (InterruptedException e) {
            System.err.println(e);
        }

// Interrupt

        main.java.Threads.MyThread myThread = new main.java.Threads.MyThread();
        myThread.start();
        try {
            Thread.sleep(2500);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }


        myThread.interrupt();
        System.out.println("Called interrupt()");

                //Synchronized threads

                TargetClass target = new TargetClass();
                SleepThread t1 = new SleepThread(1, target);
                SleepThread t2 = new SleepThread(2, target);
                SleepThread t3 = new SleepThread(3, target);
                t1.start();
                t2.start();
                t3.start();